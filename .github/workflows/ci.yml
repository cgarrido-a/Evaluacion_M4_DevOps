name: CI HealthTrack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Install Chrome and Chromedriver
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb
        # Instalar Google Chrome estable
        wget -N https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y

        # Descargar ChromeDriver compatible con la versión instalada de Chrome
        wget -N https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/137.0.7151.119/linux64/chromedriver-linux64.zip
        unzip -o chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Build with Maven and Run Tests
      env:
        DISPLAY: :99
      run: |
        Xvfb :99 &  # Selenium necesita un servidor X virtual para modo headless
        mvn clean verify

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar -Dsonar.projectKey=cgarrido-a_Evaluacion_M4_DevOps \
                        -Dsonar.organization=cgarrido-a \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.login=$SONAR_TOKEN

    - name: Upload JUnit test reports
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-reports
        path: target/surefire-reports

    - name: Install JMeter
      run: |
        wget https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.6.3.tgz
        tar -xzf apache-jmeter-5.6.3.tgz

    - name: Run JMeter performance test
      run: |
        apache-jmeter-5.6.3/bin/jmeter -n \
          -t src/test/java/com/healthtrack/HealthTrackTestPlan.jmx \
          -l results.jtl

    - name: Generate JMeter HTML Report
      run: |
        mkdir jmeter-report
        apache-jmeter-5.6.3/bin/jmeter -g results.jtl -o jmeter-report

    - name: Upload JMeter HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-html-report
        path: jmeter-report

    - name: Send email on failure (prueba sin enviar)
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.test.com
        server_port: 587
        username: test@example.com
        password: fakepassword
        subject: "Prueba pipeline CI - No enviar mail"
        body: "Esta es una prueba y no se enviará correo real."
        to: test@nowhere.com
        from: test@example.com
        secure: true

